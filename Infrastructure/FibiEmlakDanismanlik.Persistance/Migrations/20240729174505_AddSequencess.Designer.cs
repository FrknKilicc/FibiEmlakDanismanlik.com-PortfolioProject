// <auto-generated />
using System;
using FibiEmlakDanismanlik.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FibiEmlakDanismanlik.Persistence.Migrations
{
    [DbContext(typeof(FibiEmlakDanismanlikContext))]
    [Migration("20240729174505_AddSequencess")]
    partial class AddSequencess
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("Seq_ForSaleCommercialPropertyListings_Table")
                .StartsAt(500000L);

            modelBuilder.HasSequence<int>("Seq_ForSaleHousingPropertyListings_Table");

            modelBuilder.HasSequence<int>("Seq_ForSaleLandListings_Table")
                .StartsAt(200000L);

            modelBuilder.HasSequence<int>("Seq_RentalCommercialPropertyListings_Table")
                .StartsAt(1000000L);

            modelBuilder.HasSequence<int>("Seq_RentalHousingListings_Table")
                .StartsAt(100000L);

            modelBuilder.HasSequence<int>("Seq_RentalLandListings_Table")
                .StartsAt(300000L);

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.AboutUs", b =>
                {
                    b.Property<int>("AboutUsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AboutUsId"));

                    b.Property<string>("AboutUsDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUsImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUsTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AboutUsId");

                    b.ToTable("AboutUs");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentId"));

                    b.Property<string>("AgentDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AgentImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("AuthorImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BlogDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TopNews")
                        .HasColumnType("bit");

                    b.HasKey("BlogId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("EMail1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber1")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumber2")
                        .HasColumnType("int");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.ForSaleCommercialPropertyListing", b =>
                {
                    b.Property<int>("ForSaleCommercialListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ForSaleCommercialListingId"));

                    b.Property<string>("AddressDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<bool?>("BestDeals")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Exchange")
                        .HasColumnType("bit");

                    b.Property<string>("Facade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GrossArea")
                        .HasColumnType("float");

                    b.Property<bool>("LandLoan")
                        .HasColumnType("bit");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfKitchens")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfSection")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PropImgUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR Seq_ForSaleCommercialPropertyListings_Table");

                    b.Property<double?>("SharePercentage")
                        .HasColumnType("float");

                    b.Property<string>("TitleDeedStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Transferable")
                        .HasColumnType("bit");

                    b.HasKey("ForSaleCommercialListingId");

                    b.HasIndex("AgentId");

                    b.ToTable("forSaleCommercialPropertyListings");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.ForSaleHousingListing", b =>
                {
                    b.Property<int>("ForSaleHousingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ForSaleHousingListId"));

                    b.Property<string>("AddressDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<bool?>("BestDeals")
                        .HasColumnType("bit");

                    b.Property<bool?>("BlackBox")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingAge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Dues")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Exchange")
                        .HasColumnType("bit");

                    b.Property<string>("Facade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Furnished")
                        .HasColumnType("bit");

                    b.Property<double>("GrossArea")
                        .HasColumnType("float");

                    b.Property<string>("Heating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HomeLoan")
                        .HasColumnType("bit");

                    b.Property<int>("HousingCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsElevator")
                        .HasColumnType("bit");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NetArea")
                        .HasColumnType("float");

                    b.Property<int?>("NumberOfBalconies")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfBathRoom")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OpenArea")
                        .HasColumnType("float");

                    b.Property<bool?>("ParkingLot")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PropImgUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR Seq_ForSaleHousingPropertyListings_Table");

                    b.Property<string>("PropertyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleDeedStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalNumberOfFloor")
                        .HasColumnType("int");

                    b.Property<string>("UsageStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WithinTheComplex")
                        .HasColumnType("bit");

                    b.HasKey("ForSaleHousingListId");

                    b.HasIndex("AgentId");

                    b.HasIndex("HousingCategoryId");

                    b.ToTable("forSaleHousingPropertyListings");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.ForSaleLandListing", b =>
                {
                    b.Property<int>("ForSaleLandListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ForSaleLandListingId"));

                    b.Property<string>("AddressDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<double?>("BaseAreaRatio")
                        .HasColumnType("float");

                    b.Property<bool?>("BestDeals")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DevelopmentRight")
                        .HasColumnType("bit");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Exchange")
                        .HasColumnType("bit");

                    b.Property<double?>("FloorAreaRatio")
                        .HasColumnType("float");

                    b.Property<int>("LandCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("LandLoan")
                        .HasColumnType("bit");

                    b.Property<string>("MapSheetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PricePerSquareMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PropImgUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR Seq_ForSaleLandListings_Table");

                    b.Property<string>("PropertyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SharePercentage")
                        .HasColumnType("float");

                    b.Property<string>("TitleDeedStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoningPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoningStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ForSaleLandListingId");

                    b.HasIndex("AgentId");

                    b.HasIndex("LandCategoryId");

                    b.ToTable("forSaleLandListings");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.FrequentlyAskedQuestion", b =>
                {
                    b.Property<int>("FrequentlyAskedQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FrequentlyAskedQuestionId"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FrequentlyAskedQuestionId");

                    b.ToTable("frequentlyAskedQuestions");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.HousingCategory", b =>
                {
                    b.Property<int>("HousingCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HousingCategoryId"));

                    b.Property<string>("HousingCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainCategoryId")
                        .HasColumnType("int");

                    b.HasKey("HousingCategoryId");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("HousingCategories");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.LandCategory", b =>
                {
                    b.Property<int>("LandCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandCategoryId"));

                    b.Property<string>("LandCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LandCategoryId");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("LandCategories");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.MainBanner", b =>
                {
                    b.Property<int>("MainBannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MainBannerId"));

                    b.Property<string>("MainBannerDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainBannerUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MainBannerId");

                    b.ToTable("MainBanners");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.MainCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("MainCategories");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.RentalCommercialPropertyListing", b =>
                {
                    b.Property<int>("RentalCommercialListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalCommercialListId"));

                    b.Property<string>("AddressDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<bool?>("BestDeals")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingAge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrossArea")
                        .HasColumnType("float");

                    b.Property<string>("Heating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NetArea")
                        .HasColumnType("float");

                    b.Property<int?>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfKitchens")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfSection")
                        .HasColumnType("int");

                    b.Property<string>("PropImgUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR Seq_RentalCommercialPropertyListings_Table");

                    b.Property<string>("PropertyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TitleDeedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RentalCommercialListId");

                    b.HasIndex("AgentId");

                    b.ToTable("rentalCommercialPropertyListings");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.RentalHousingListing", b =>
                {
                    b.Property<int>("RentalHousingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalHousingListId"));

                    b.Property<string>("AddressDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<bool?>("BestDeals")
                        .HasColumnType("bit");

                    b.Property<bool?>("BlackBox")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingAge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Dues")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Facade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Furnished")
                        .HasColumnType("bit");

                    b.Property<double>("GrossArea")
                        .HasColumnType("float");

                    b.Property<string>("Heating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HousingCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsElevator")
                        .HasColumnType("bit");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NetArea")
                        .HasColumnType("float");

                    b.Property<int?>("NumberOfBalconies")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfBathRoom")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OpenArea")
                        .HasColumnType("float");

                    b.Property<bool?>("ParkingLot")
                        .HasColumnType("bit");

                    b.Property<string>("PropImgUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR Seq_RentalHousingListings_Table");

                    b.Property<string>("PropertyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalNumberOfFloor")
                        .HasColumnType("int");

                    b.Property<bool?>("WithinTheComplex")
                        .HasColumnType("bit");

                    b.HasKey("RentalHousingListId");

                    b.HasIndex("AgentId");

                    b.HasIndex("HousingCategoryId");

                    b.ToTable("rentalHousingListings");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.RentalLandListing", b =>
                {
                    b.Property<int>("RentalLandListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalLandListingId"));

                    b.Property<string>("AddressDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<double?>("BaseAreaRatio")
                        .HasColumnType("float");

                    b.Property<bool?>("BestDeals")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DevelopmentRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("FloorAreaRatio")
                        .HasColumnType("float");

                    b.Property<int>("LandCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MapSheetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerSquareMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PropImgUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropImgUrl9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR Seq_RentalLandListings_Table");

                    b.Property<string>("PropertyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TitleDeedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoningPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoningStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RentalLandListingId");

                    b.HasIndex("AgentId");

                    b.HasIndex("LandCategoryId");

                    b.ToTable("rentalLandListings");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("ServiceDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId");

                    b.ToTable("services");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.Blog", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.ForSaleCommercialPropertyListing", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.ForSaleHousingListing", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.HousingCategory", "HousingCategory")
                        .WithMany()
                        .HasForeignKey("HousingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("HousingCategory");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.ForSaleLandListing", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.LandCategory", "LandCategory")
                        .WithMany()
                        .HasForeignKey("LandCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("LandCategory");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.HousingCategory", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.MainCategory", "MainCategory")
                        .WithMany()
                        .HasForeignKey("MainCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.LandCategory", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.MainCategory", "MainCategory")
                        .WithMany()
                        .HasForeignKey("MainCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.RentalCommercialPropertyListing", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.RentalHousingListing", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.HousingCategory", "HousingCategory")
                        .WithMany()
                        .HasForeignKey("HousingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("HousingCategory");
                });

            modelBuilder.Entity("FibiEmlakDanismanlik.Domain.Entities.RentalLandListing", b =>
                {
                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FibiEmlakDanismanlik.Domain.Entities.LandCategory", "LandCategory")
                        .WithMany()
                        .HasForeignKey("LandCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("LandCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
